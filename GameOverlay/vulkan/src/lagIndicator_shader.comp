//
// Copyright(c) 2016 Advanced Micro Devices, Inc. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files(the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions :
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//

#version 450

#extension GL_ARB_separate_shader_objects : enable

layout (local_size_x = 8, local_size_y = 8, local_size_z=1) in;

layout (binding = 0, rgba8) uniform image2D image;

layout (binding = 1) uniform UniformBuffer
{
  int pos_x;
  int pos_y;
  int keydown;
} ub;

void main()
{
  if (ub.keydown == 1)
  {
    imageStore(image, ivec2(gl_GlobalInvocationID.x + ub.pos_x, gl_GlobalInvocationID.y + ub.pos_y), vec4(1.0, 1.0, 1.0, 1.0));
  } else {
    imageStore(image, ivec2(gl_GlobalInvocationID.x + ub.pos_x, gl_GlobalInvocationID.y + ub.pos_y), vec4(0.0, 0.0, 0.0, 1.0));
  }
}